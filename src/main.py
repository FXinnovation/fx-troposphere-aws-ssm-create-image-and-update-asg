"""
Generates a cloudformation to deploy this functionality into SSM
@author: pclermont
"""
from __future__ import print_function

import json
from os import path

from troposphere import Template, Parameter, Ref
from troposphere.constants import STRING
from troposphere.ssm import Document
from troposphere.ssm import Parameter as SSMParameter


def main():
    """
    main function
    """
    cf_template = Template()

    cf_template.set_version('2010-09-09')

    update_asg_document = cf_template.add_parameter(
        Parameter(
            'UpdateASG',
            Type='AWS::SSM::Parameter::Value<String>',
            Description=' '.join([
                'ssm parameter that contains the name of the document',
                ' for UpdateASG'
            ]),
            Default='/Documents/SSM/UpdateASG'
        )
    )

    json_file = open(
        path.join(
            path.dirname(__file__),
            'data/ssm_document.json'
        )
    )

    ssm_document_data = json.load(json_file)

    ssm_document_data['mainSteps'][1]['inputs']['DocumentName'] = \
        Ref(update_asg_document)

    ssm_document = cf_template.add_resource(
        Document(
            'AmiAndUpdate',
            Content=ssm_document_data,
            DocumentType='Automation'
        )
    )

    cf_template.add_resource(
        SSMParameter(
            'SSMParameter',
            Type=STRING,
            Name='/Documents/SSM/create_ami_update_asg',
            Value=Ref(ssm_document),
            Description=' '.join([
                'This Value is generated by CloudFormation in order to link'
                'the documents dynamically.'
            ])
        )
    )

    with open('CloudFormation.json', 'w') as cf_file:
        cf_file.write(cf_template.to_json())


if __name__ == '__main__':
    main()
